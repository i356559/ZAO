managed ; //implementation in class zbp_ey_ao_i_m_travel ;
strict ( 2 );
with draft;

define behavior for ZEY_AO_I_M_TRAVEL alias Travel
implementation in class zbp_ey_ao_i_m_travel unique
draft table zey_ao_d_trav
persistent table /DMO/TRAVEL
lock master
total etag Lastchangedat
    authorization master ( global )
etag master Lastchangedat
early numbering
{
  create;
  update;
  delete;
  association _Bookings { create; with draft; }

  field( readonly ) lastchangedat, Lastchangedby, Createdat, Createdby;
  field( mandatory ) AgencyId, CustomerId, BeginDate, EndDate;
  field ( features:instance ) travelid;

  action createTravelByTemplate result [1] $self;

  action( features: instance ) acceptTravel result[1] $self;
  action( features: instance ) rejectTravel result[1] $self;

  validation validateCustomer on save { field customerid; create; }
  validation validateDates on save { field begindate, enddate; create; }
  validation validateStatus on save { field status; }

  draft action Edit;
  draft action Activate;
  draft action Discard;
  draft action Resume;
  draft determine action Prepare{
    validation validateCustomer;
    validation validateDates;
    validation validateStatus;
  }

  mapping for /dmo/travel{
    AgencyId = agency_id;
    BeginDate = begin_date;
    BookingFee = booking_fee;
    CurrencyCode = currency_code;
    CustomerId = customer_id;
    EndDate = end_date;
    Lastchangedat = lastchangedat;
    Description = description;
    Status = status;
    TotalPrice = total_price;
    TravelId = travel_id;
    CreatedBy = createdby;
    Lastchangedby = lastchangedby;
    Createdat = createdat;
  }
}

define behavior for ZEY_AO_I_M_BOOKING alias Booking
implementation in class zbp_ey_ao_i_m_booking unique
draft table zey_ao_d_book
persistent table /dmo/booking
lock dependent by _Travel
authorization dependent by _Travel
etag master Lastchangedat
early numbering
{
  update;
  delete;
  field ( readonly ) TravelId;
  association _Travel { with draft; }
  association _BookSuppl { create; with draft; }

  field( mandatory ) CarrierId, ConnectionId, BookingDate;
  field ( features : instance ) bookingid, bookingdate, customerid;

  determination calculateTotalFlightPrice on modify { field flightprice, currencycode; create; }

  mapping for /dmo/booking{
    BookingId = booking_id;
    TravelId = travel_id;
    BookingDate = booking_date;
    CustomerId = customer_id;
    CarrierId = carrier_id;
    ConnectionId = connection_id;
    FlightDate = flight_date;
    FlightPrice = flight_price;
    CurrencyCode = currency_code;
  }
}


define behavior for ZEY_AO_I_M_BOOK_SUPPL alias BookingSupplement
implementation in class zbp_ey_ao_i_m_booksppl unique
draft table zey_ao_d_book_su
persistent table /dmo/book_suppl
lock dependent by _Travel
authorization dependent by _Travel

{
  update;
  delete;
  field ( readonly ) TravelId;
  association _Bookings { with draft; }
  association _Travel { with draft; }

  field( readonly ) BookingId, BookingSupplementId, Price, SupplementId;

  mapping for /dmo/book_suppl{
    BookingId = booking_id;
    TravelId = travel_id;
    BookingSupplementId = booking_supplement_id;
    CurrencyCode = currency_code;
    Price = price;
    SupplementId = supplement_id;
  }
}